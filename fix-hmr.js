const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß Fixing HMR issues...\n');

// Step 1: Kill any running Next.js processes
console.log('1Ô∏è‚É£ Stopping Next.js processes...');
try {
  if (process.platform === 'win32') {
    execSync('taskkill /F /IM node.exe', { stdio: 'ignore' });
  } else {
    execSync('pkill -f "next dev" || true', { stdio: 'ignore' });
  }
  console.log('   ‚úÖ Processes stopped\n');
} catch (e) {
  console.log('   ‚ÑπÔ∏è No processes to stop\n');
}

// Step 2: Clear Next.js cache
console.log('2Ô∏è‚É£ Clearing Next.js cache...');
const nextDir = path.join(__dirname, '.next');
if (fs.existsSync(nextDir)) {
  fs.rmSync(nextDir, { recursive: true, force: true });
  console.log('   ‚úÖ .next directory removed\n');
} else {
  console.log('   ‚ÑπÔ∏è No .next directory found\n');
}

// Step 3: Clear node_modules cache
console.log('3Ô∏è‚É£ Clearing node_modules cache...');
const cacheDir = path.join(__dirname, 'node_modules', '.cache');
if (fs.existsSync(cacheDir)) {
  fs.rmSync(cacheDir, { recursive: true, force: true });
  console.log('   ‚úÖ Cache cleared\n');
} else {
  console.log('   ‚ÑπÔ∏è No cache found\n');
}

// Step 4: Check for .env.local
console.log('4Ô∏è‚É£ Checking environment configuration...');
const envFile = path.join(__dirname, '.env.local');
const envExampleFile = path.join(__dirname, '.env.local.example');

if (!fs.existsSync(envFile) && fs.existsSync(envExampleFile)) {
  fs.copyFileSync(envExampleFile, envFile);
  console.log('   ‚úÖ Created .env.local from example\n');
} else if (fs.existsSync(envFile)) {
  console.log('   ‚úÖ .env.local exists\n');
} else {
  console.log('   ‚ö†Ô∏è  No .env.local found - creating empty file\n');
  fs.writeFileSync(envFile, '');
}

console.log('‚ú® HMR fix complete!\n');
console.log('Next steps:');
console.log('1. Run: npm install --legacy-peer-deps');
console.log('2. Run: npm run dev');
console.log('3. Open http://localhost:3000 in a fresh browser tab\n');